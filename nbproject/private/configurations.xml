<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name=".vscode">
      </df>
      <df name="AggregateEagerTest">
        <df name="abstract_dialectical_frameworks-sample">
          <df name="__MACOSX">
            <df name="abstract_dialectical_frameworks-sample">
            </df>
          </df>
          <df name="abstract_dialectical_frameworks-sample">
          </df>
        </df>
        <df name="instances">
          <df name="failed">
          </df>
          <df name="passed">
          </df>
        </df>
        <df name="plain_wasp">
        </df>
        <df name="wasp_propagators">
        </df>
      </df>
      <df name="build">
        <df name="release">
          <df name="heuristic">
          </df>
          <df name="input">
          </df>
          <df name="interpreters">
          </df>
          <df name="lp2cpp">
            <df name="datastructures">
            </df>
            <df name="DLV2libs">
              <df name="input">
              </df>
              <df name="util">
              </df>
            </df>
            <df name="language">
            </df>
            <df name="parsing">
            </df>
            <df name="utils">
            </df>
          </df>
          <df name="outputBuilders">
          </df>
          <df name="propagators">
          </df>
          <df name="util">
          </df>
          <df name="weakconstraints">
          </df>
        </df>
      </df>
      <df name="eagerCountTests">
        <df name="autogenerated">
          <df name="testInstances">
          </df>
        </df>
      </df>
      <df name="python_libraries">
        <df name="examples">
        </df>
        <df name="heuristics">
        </df>
      </df>
      <df name="src">
        <df name="heuristic">
          <in>ExternalHeuristic.cpp</in>
          <in>ExternalHeuristic.h</in>
          <in>MinisatHeuristic.cpp</in>
          <in>MinisatHeuristic.h</in>
        </df>
        <df name="input">
          <in>AbstractRule.h</in>
          <in>AtomData.h</in>
          <in>Dimacs.cpp</in>
          <in>Dimacs.h</in>
          <in>GringoNumericFormat.cpp</in>
          <in>GringoNumericFormat.h</in>
          <in>Rule.cpp</in>
          <in>Rule.h</in>
          <in>WeightConstraint.cpp</in>
          <in>WeightConstraint.h</in>
        </df>
        <df name="interpreters">
          <in>Interpreter.cpp</in>
          <in>Interpreter.h</in>
          <in>MyCppEagerInterpreter.cpp</in>
          <in>MyCppEagerInterpreter.h</in>
          <in>MyCppLazyInterpreter.cpp</in>
          <in>MyCppLazyInterpreter.h</in>
          <in>MyPerlInterpreter.cpp</in>
          <in>MyPerlInterpreter.h</in>
          <in>MyPythonInterpreter.cpp</in>
          <in>MyPythonInterpreter.h</in>
        </df>
        <df name="lp2cpp">
          <df name="datastructures">
            <in>AuxiliaryMap.cpp</in>
            <in>AuxiliaryMap.h</in>
            <in>BoundAnnotatedLiteral.cpp</in>
            <in>BoundAnnotatedLiteral.h</in>
            <in>DenseMap.cpp</in>
            <in>DenseMap.h</in>
            <in>PredicateSet.cpp</in>
            <in>PredicateSet.h</in>
            <in>TupleWithReasons.cpp</in>
            <in>TupleWithReasons.h</in>
            <in>TupleWithoutReasons.cpp</in>
            <in>TupleWithoutReasons.h</in>
          </df>
          <df name="DLV2libs">
            <df name="input">
              <in>Buffer.cpp</in>
              <in>Buffer.h</in>
              <in>InputBuilder.h</in>
              <in>InputDirector.cpp</in>
              <in>InputDirector.h</in>
              <in>ParserConstraint.h</in>
              <in>ParserConstraintAspCore2Strict.h</in>
              <in>aspcore2_lexer.hpp</in>
              <in>aspcore2_parser.h</in>
              <in>aspcore2_parser.hpp</in>
            </df>
            <df name="util">
              <in>Assert.h</in>
              <in>Constants.h</in>
              <in>ErrorMessage.h</in>
              <in>Help.h</in>
              <in>Options.cpp</in>
              <in>Options.h</in>
              <in>Utils.cpp</in>
              <in>Utils.h</in>
            </df>
          </df>
          <df name="language">
            <in>Aggregate.cpp</in>
            <in>Aggregate.h</in>
            <in>ArithmeticExpression.cpp</in>
            <in>ArithmeticExpression.h</in>
            <in>ArithmeticRelation.cpp</in>
            <in>ArithmeticRelation.h</in>
            <in>ArithmeticRelationWithAggregate.cpp</in>
            <in>ArithmeticRelationWithAggregate.h</in>
            <in>Atom.cpp</in>
            <in>Atom.h</in>
            <in>Formula.h</in>
            <in>Literal.cpp</in>
            <in>Literal.h</in>
            <in>Program.cpp</in>
            <in>Program.h</in>
            <in>Rule.cpp</in>
            <in>Rule.h</in>
          </df>
          <df name="parsing">
            <in>AspCore2InstanceBuilder.cpp</in>
            <in>AspCore2InstanceBuilder.h</in>
            <in>AspCore2ProgramBuilder.cpp</in>
            <in>AspCore2ProgramBuilder.h</in>
            <in>aspcore2.tab.h</in>
            <in>aspcore2_lexer.hpp</in>
          </df>
          <df name="utils">
            <in>ConstantsManager.cpp</in>
            <in>ConstantsManager.h</in>
            <in>FilesManagement.cpp</in>
            <in>FilesManagement.h</in>
            <in>GraphWithTarjanAlgorithm.cpp</in>
            <in>GraphWithTarjanAlgorithm.h</in>
            <in>Indentation.cpp</in>
            <in>Indentation.h</in>
            <in>SharedFunctions.cpp</in>
            <in>SharedFunctions.h</in>
          </df>
          <in>CompilationManager.cpp</in>
          <in>CompilationManager.h</in>
          <in>EagerConstraint.h</in>
          <in>EagerConstraintImpl.cpp</in>
          <in>EagerConstraintImpl.h</in>
          <in>ExecutionManager.cpp</in>
          <in>ExecutionManager.h</in>
          <in>Executor.cpp</in>
          <in>Executor.h</in>
          <in>LazyConstraint.h</in>
          <in>LazyConstraintImpl.cpp</in>
          <in>LazyConstraintImpl.h</in>
        </df>
        <df name="outputBuilders">
          <in>CompetitionOutputBuilder.cpp</in>
          <in>CompetitionOutputBuilder.h</in>
          <in>DimacsOutputBuilder.cpp</in>
          <in>DimacsOutputBuilder.h</in>
          <in>IdOutputBuilder.cpp</in>
          <in>IdOutputBuilder.h</in>
          <in>MultiOutputBuilder.cpp</in>
          <in>MultiOutputBuilder.h</in>
          <in>NoopOutputBuilder.h</in>
          <in>OutputBuilder.cpp</in>
          <in>OutputBuilder.h</in>
          <in>SilentOutputBuilder.cpp</in>
          <in>SilentOutputBuilder.h</in>
          <in>ThirdCompetitionOutputBuilder.cpp</in>
          <in>ThirdCompetitionOutputBuilder.h</in>
          <in>WaspOutputBuilder.cpp</in>
          <in>WaspOutputBuilder.h</in>
        </df>
        <df name="propagators">
          <in>Aggregate.cpp</in>
          <in>Aggregate.h</in>
          <in>CardinalityConstraint.cpp</in>
          <in>CardinalityConstraint.h</in>
          <in>Component.cpp</in>
          <in>Component.h</in>
          <in>DisjunctionPropagator.cpp</in>
          <in>DisjunctionPropagator.h</in>
          <in>ExternalPropagator.cpp</in>
          <in>ExternalPropagator.h</in>
          <in>HCComponent.cpp</in>
          <in>HCComponent.h</in>
          <in>MultiAggregate.cpp</in>
          <in>MultiAggregate.h</in>
          <in>PostPropagator.h</in>
          <in>Propagator.h</in>
          <in>ReductBasedCheck.cpp</in>
          <in>ReductBasedCheck.h</in>
          <in>UnfoundedBasedCheck.cpp</in>
          <in>UnfoundedBasedCheck.h</in>
        </df>
        <df name="stl">
          <in>BoundedQueue.h</in>
          <in>Heap.h</in>
          <in>HeapLiterals.h</in>
          <in>Trie.h</in>
          <in>UnorderedSet.h</in>
          <in>Vector.h</in>
          <in>WatchedList.h</in>
        </df>
        <df name="util">
          <in>ExtendedStatistics.cpp</in>
          <in>ExtendedStatistics.h</in>
          <in>Istream.h</in>
          <in>Statistics.cpp</in>
          <in>Statistics.h</in>
          <in>VariableNames.cpp</in>
          <in>VariableNames.h</in>
          <in>WaspAssert.h</in>
          <in>WaspConstants.h</in>
          <in>WaspErrorMessage.h</in>
          <in>WaspHelp.h</in>
          <in>WaspOptions.cpp</in>
          <in>WaspOptions.h</in>
          <in>WaspTrace.h</in>
        </df>
        <df name="weakconstraints">
          <in>K.cpp</in>
          <in>K.h</in>
          <in>LazyInstantiation.cpp</in>
          <in>LazyInstantiation.h</in>
          <in>Mgd.cpp</in>
          <in>Mgd.h</in>
          <in>One.cpp</in>
          <in>One.h</in>
          <in>OneBB.cpp</in>
          <in>OneBB.h</in>
          <in>Opt.cpp</in>
          <in>Opt.h</in>
          <in>OptimizationProblemUtils.cpp</in>
          <in>OptimizationProblemUtils.h</in>
          <in>PMRes.cpp</in>
          <in>PMRes.h</in>
          <in>WeakInterface.cpp</in>
          <in>WeakInterface.h</in>
        </df>
        <in>AnswerSetListener.h</in>
        <in>CautiousReasoning.cpp</in>
        <in>CautiousReasoning.h</in>
        <in>Clause.cpp</in>
        <in>Clause.h</in>
        <in>DependencyGraph.cpp</in>
        <in>DependencyGraph.h</in>
        <in>Enumeration.cpp</in>
        <in>Enumeration.h</in>
        <in>GUSData.cpp</in>
        <in>GUSData.h</in>
        <in>Learning.cpp</in>
        <in>Learning.h</in>
        <in>Literal.cpp</in>
        <in>Literal.h</in>
        <in>PredicateMinimization.cpp</in>
        <in>PredicateMinimization.h</in>
        <in>ProgramListener.h</in>
        <in>QueryInterface.cpp</in>
        <in>QueryInterface.h</in>
        <in>Reason.h</in>
        <in>ReasonForBinaryClauses.cpp</in>
        <in>ReasonForBinaryClauses.h</in>
        <in>Restart.h</in>
        <in>Satelite.cpp</in>
        <in>Satelite.h</in>
        <in>Solver.cpp</in>
        <in>Solver.h</in>
        <in>Variables.h</in>
        <in>WaspFacade.cpp</in>
        <in>WaspFacade.h</in>
        <in>main.cc</in>
      </df>
      <df name="tests">
        <df name="asp">
          <df name="AllAnswerSets">
            <df name="aggregates">
            </df>
            <df name="nontight">
            </df>
            <df name="tight">
            </df>
          </df>
          <df name="AllAnswerSetsIntensive">
          </df>
          <df name="cautious">
            <df name="old">
            </df>
          </df>
          <df name="gringo">
          </df>
          <df name="weakConstraints">
          </df>
        </df>
        <df name="giuseppe">
          <in>constraint</in>
          <in>constraint_with_aggregate</in>
        </df>
        <df name="sat">
          <df name="AllModels">
          </df>
          <df name="Intensive">
          </df>
          <df name="Intensive2">
          </df>
          <df name="Intensive3">
          </df>
          <df name="Models">
          </df>
        </df>
        <df name="wasp1">
          <df name="AllAnswerSets">
          </df>
        </df>
      </df>
      <df name="wasp">
      </df>
    </df>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE} -g</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
            <option name="debug_command"
                    value="&quot;${OUTPUT_PATH}&quot; --interpreter=cpp_eager --script-directory=. --plugins-file=tests/giuseppe/constraint -n0"/>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}" --compile-eager ../tests/giuseppe/constraint_with_aggregate</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" --compile-eager tests/giuseppe/constraint_with_aggregate</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" --interpreter=cpp_eager --script-directory=. --plugins-file=encodings/fail -n 0</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" --compile_eager tests/giuseppe/constraint_with_aggregate</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" --compile-eager=tests/giuseppe/constraint_with_aggregate</runcommandpicklistitem>
          <runcommandpicklistitem>"${OUTPUT_PATH}" --interpreter=cpp_eager --script-directory=. --plugins-file=tests/giuseppe/constraint -n0</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}" --interpreter=cpp_eager --script-directory=. --plugins-file=tests/giuseppe/constraint -n0</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
